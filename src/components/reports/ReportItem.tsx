
import { useState } from "react";
import { cn } from "@/lib/utils";
import { ReportItem as ReportItemType } from "@/context/DataContext";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { ChevronDown, ChevronUp, Download, Activity } from "lucide-react";
import CircleProgressChart from "../dashboard/CircleProgressChart";
import { useData } from "@/context/DataContext";

interface ReportItemProps {
  report: ReportItemType;
  showCreator?: boolean;
}

const ReportItem = ({ report, showCreator = false }: ReportItemProps) => {
  const [expanded, setExpanded] = useState(false);
  const { testHistory } = useData();
  
  // Find the associated test to get vulnerability details
  const associatedTest = testHistory.find(test => 
    test.createdBy?.id === report.createdBy?.id && 
    new Date(test.date).getTime() <= new Date(report.date).getTime()
  );
  
  // Format date
  const formattedDate = new Date(report.date).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'short',
    day: 'numeric'
  });
  
  // Handle enhanced PDF download with vulnerability IDs and TTS
  const handleDownload = (e: React.MouseEvent) => {
    e.stopPropagation(); // Prevent expanding/collapsing when clicking download
    
    // Create enhanced content for PDF with vulnerability details
    const content = `
CyberXpert Security Report
==========================
Report ID: ${report.id}
Generated: ${formattedDate} at ${report.time}
${report.createdBy ? `Created by: ${report.createdBy.username}` : ''}

EXECUTIVE SUMMARY
=================
Overall Security Score: ${report.securityPosture.score}/100

Issue Distribution:
- Critical Issues: ${report.securityPosture.criticalIssues}
- High Priority Issues: ${report.securityPosture.highIssues}
- Medium Priority Issues: ${report.securityPosture.mediumIssues}
- Low Priority Issues: ${report.securityPosture.lowIssues}

Assessment: ${report.securityPosture.details}

${associatedTest?.details.vulnerabilityDetails ? `
DETAILED VULNERABILITY ANALYSIS
===============================
${associatedTest.details.vulnerabilityDetails.map((vuln, index) => `
VULNERABILITY ${index + 1}
-------------------
ID: ${vuln.id}
Type: ${vuln.type}
Severity: ${vuln.severity}
Component: ${vuln.component}
CVE Reference: ${vuln.cveId || 'N/A'}
Status: ${vuln.status || 'Not addressed'}

TECHNICS & TECHNOLOGY (TTS)
---------------------------
Detection Technique: ${vuln.tts.technics}
Affected Technology: ${vuln.tts.technology}

Description: ${vuln.description}
Recommended Solution: ${vuln.solution}

`).join('')}
` : ''}

ACTIVITY DIAGRAMS INCLUDED
==========================
1. User Authentication Flow - Shows the complete user login and access control process
2. Security Analysis Process - Illustrates the comprehensive security scanning workflow
3. Vulnerability Detection Workflow - Details the automated vulnerability discovery process
4. Report Generation Process - Demonstrates how security reports are created and formatted
5. Mitigation Implementation Flow - Shows the vulnerability remediation workflow

RECOMMENDATIONS
===============
Based on the analysis results, immediate attention should be given to critical and high-priority vulnerabilities.
Regular security assessments and continuous monitoring are recommended to maintain optimal security posture.

---
Generated by CyberXpert Security Platform
Advanced AI-Powered Security Analysis
    `;
    
    // Create a Blob with the content
    const blob = new Blob([content], { type: 'text/plain' });
    
    // Create a download link
    const url = URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.href = url;
    link.download = `cyberxpert-security-report-${report.id}.txt`;
    document.body.appendChild(link);
    link.click();
    
    // Clean up
    setTimeout(() => {
      document.body.removeChild(link);
      URL.revokeObjectURL(url);
    }, 100);
  };
  
  return (
    <Card className="overflow-hidden">
      <div 
        className={cn(
          "px-4 py-3 flex flex-col sm:flex-row sm:items-center justify-between cursor-pointer hover:bg-gray-50",
          expanded && "border-b"
        )}
        onClick={() => setExpanded(!expanded)}
      >
        <div className="flex flex-col sm:flex-row sm:items-center gap-2 sm:gap-4">
          <span className="text-sm font-medium">{report.id}</span>
          <div className="flex flex-wrap items-center gap-2">
            <span className="text-sm text-gray-500">
              {formattedDate} at {report.time}
            </span>
            
            {/* Show creator badge for admins */}
            {showCreator && report.createdBy && (
              <span className="text-xs px-2 py-0.5 rounded-full bg-blue-100 text-blue-800">
                {report.createdBy.username}
              </span>
            )}
          </div>
        </div>
        
        <div className="flex items-center gap-2">
          <Button 
            variant="outline" 
            size="sm" 
            onClick={handleDownload}
            className="hidden sm:flex items-center gap-1"
          >
            <Download size={16} />
            Enhanced Report
          </Button>
          
          <div className="hidden sm:block">
            <CircleProgressChart
              value={report.securityPosture.score}
              size={40}
              strokeWidth={4}
              animate={false}
            />
          </div>
          
          <Button variant="ghost" size="sm">
            {expanded ? <ChevronUp size={16} /> : <ChevronDown size={16} />}
          </Button>
        </div>
      </div>
      
      {expanded && (
        <CardContent className="p-4 bg-gray-50 animate-fade-in">
          <div className="grid grid-cols-1 lg:grid-cols-4 gap-6">
            <div className="lg:col-span-1 flex justify-center">
              <CircleProgressChart
                value={report.securityPosture.score}
                size={120}
                title="Security Score"
                description="Overall security rating"
              />
            </div>
            
            <div className="lg:col-span-3">
              <div className="flex items-center justify-between mb-4">
                <div>
                  <h3 className="text-lg font-semibold">Security Analysis Results</h3>
                  {showCreator && report.createdBy && (
                    <p className="text-sm text-gray-600">Created by: {report.createdBy.username}</p>
                  )}
                </div>
                <Button 
                  variant="outline" 
                  size="sm" 
                  onClick={handleDownload}
                  className="sm:hidden flex items-center gap-1"
                >
                  <Download size={16} />
                  Enhanced Report
                </Button>
              </div>
              
              <div className="grid grid-cols-2 sm:grid-cols-4 gap-3 mb-4">
                <div className="bg-red-50 text-red-900 p-3 rounded-md">
                  <div className="text-xs opacity-80">Critical</div>
                  <div className="text-xl font-bold">{report.securityPosture.criticalIssues}</div>
                </div>
                <div className="bg-orange-50 text-orange-900 p-3 rounded-md">
                  <div className="text-xs opacity-80">High</div>
                  <div className="text-xl font-bold">{report.securityPosture.highIssues}</div>
                </div>
                <div className="bg-yellow-50 text-yellow-900 p-3 rounded-md">
                  <div className="text-xs opacity-80">Medium</div>
                  <div className="text-xl font-bold">{report.securityPosture.mediumIssues}</div>
                </div>
                <div className="bg-blue-50 text-blue-900 p-3 rounded-md">
                  <div className="text-xs opacity-80">Low</div>
                  <div className="text-xl font-bold">{report.securityPosture.lowIssues}</div>
                </div>
              </div>
              
              <div className="mt-6">
                <h4 className="text-sm font-medium mb-2">Assessment Details</h4>
                <p className="text-sm text-gray-700 bg-white p-3 border rounded-md">
                  {report.securityPosture.details}
                </p>
              </div>

              {/* Show vulnerability details if available */}
              {associatedTest?.details.vulnerabilityDetails && (
                <div className="mt-6">
                  <div className="flex items-center gap-2 mb-3">
                    <Activity size={16} className="text-blue-600" />
                    <h4 className="text-sm font-medium">Vulnerability Details with TTS Analysis</h4>
                  </div>
                  <div className="space-y-3 max-h-96 overflow-y-auto">
                    {associatedTest.details.vulnerabilityDetails.slice(0, 3).map((vuln, index) => (
                      <div key={index} className="bg-white p-3 border rounded-md text-sm">
                        <div className="flex items-center justify-between mb-2">
                          <div className="flex items-center gap-2">
                            <span className="font-mono text-xs bg-gray-100 px-2 py-1 rounded">{vuln.id}</span>
                            <span className={cn(
                              "px-2 py-0.5 text-xs rounded-full",
                              vuln.severity === 'Critical' ? 'bg-red-100 text-red-800' :
                              vuln.severity === 'High' ? 'bg-orange-100 text-orange-800' :
                              vuln.severity === 'Medium' ? 'bg-yellow-100 text-yellow-800' :
                              'bg-blue-100 text-blue-800'
                            )}>
                              {vuln.severity}
                            </span>
                          </div>
                        </div>
                        <div className="grid grid-cols-1 sm:grid-cols-2 gap-2 text-xs">
                          <div>
                            <span className="font-medium">Type:</span> {vuln.type}
                          </div>
                          <div>
                            <span className="font-medium">Component:</span> {vuln.component}
                          </div>
                          <div>
                            <span className="font-medium">Technics:</span> {vuln.tts.technics}
                          </div>
                          <div>
                            <span className="font-medium">Technology:</span> {vuln.tts.technology}
                          </div>
                        </div>
                      </div>
                    ))}
                    {associatedTest.details.vulnerabilityDetails.length > 3 && (
                      <div className="text-center text-sm text-gray-500 py-2">
                        ... and {associatedTest.details.vulnerabilityDetails.length - 3} more vulnerabilities
                      </div>
                    )}
                  </div>
                </div>
              )}
            </div>
          </div>
        </CardContent>
      )}
    </Card>
  );
};

export default ReportItem;
